/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.42
 * Generated at: 2017-06-12 04:56:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ebay_005fpractice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html> \r\n");
      out.write("<script language=\"JavaScript\"> \r\n");
      out.write("function clock() { \r\n");
      out.write("   var time = new Date() \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   var hour = time.getHours() \r\n");
      out.write("   var minute = time.getMinutes() \r\n");
      out.write("   var second = time.getSeconds() \r\n");
      out.write("   var store = \" \"  \r\n");
      out.write("        \r\n");
      out.write("   store += ((hour > 12) ? (hour - 12) : hour) \r\n");
      out.write("   store += ((minute < 10) ? \":0\" : \":\") + minute \r\n");
      out.write("   store += ((second < 10) ? \":0\" : \":\") + second \r\n");
      out.write("   store += (hour >= 12) ? \" PM\" : \" AM\" \r\n");
      out.write("        \r\n");
      out.write("   document.time.clock.value = store     \r\n");
      out.write("   setTimeout(\"clock()\", 1000) \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//카운트 다운 스크립트 시작\r\n");
      out.write("var hhVal = 0;\r\n");
      out.write("var mmVal = 0;\r\n");
      out.write("var ssVal = 0;\r\n");
      out.write("var cFlag = \"Y\";\r\n");
      out.write("function setMinute(){\r\n");
      out.write("    cFlag = \"Y\";\r\n");
      out.write("    document.tForm.hhVal.value=\"\";\r\n");
      out.write("    document.tForm.mmVal.value=\"\";\r\n");
      out.write("    document.tForm.ssVal.value=\"\";\r\n");
      out.write("    \r\n");
      out.write("    var minVal = document.tForm.minVal.value;\r\n");
      out.write("    \r\n");
      out.write("    //시간\r\n");
      out.write("    if( minVal/60 > 1){\r\n");
      out.write("        hhVal =  Math.floor(minVal/60);\r\n");
      out.write("        mmVal = (minVal)%60;    \r\n");
      out.write("        ssVal = 0;\r\n");
      out.write("    //분\r\n");
      out.write("    }else{\r\n");
      out.write("        mmVal = minVal; \r\n");
      out.write("        ssVal = 0;\r\n");
      out.write("    \r\n");
      out.write("    }\r\n");
      out.write("    setTimeOn();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function setTimeOn(){\r\n");
      out.write("   \r\n");
      out.write("    if(cFlag == \"Y\"){\r\n");
      out.write("       \r\n");
      out.write("        if( ssVal == 0){\r\n");
      out.write("            \r\n");
      out.write("            ssVal = 59;\r\n");
      out.write("            if(mmVal == 0){\r\n");
      out.write("                hhVal = hhVal - 1;\r\n");
      out.write("                mmVal = 59;\r\n");
      out.write("                if(hhVal == 0)  hhVal = 0;\r\n");
      out.write("            }else{\r\n");
      out.write("                mmVal = mmVal - 1;\r\n");
      out.write("            } \r\n");
      out.write("            \r\n");
      out.write("        }else{\r\n");
      out.write("            ssVal = ssVal - 1;\r\n");
      out.write("        }\r\n");
      out.write("        if (hhVal < 10 ) document.tForm.hhVal.value=\"0\"+hhVal;\r\n");
      out.write("        else document.tForm.hhVal.value= hhVal;\r\n");
      out.write("            \r\n");
      out.write("        if (mmVal < 10 ) document.tForm.mmVal.value=\"0\"+mmVal;\r\n");
      out.write("        else document.tForm.mmVal.value= mmVal;\r\n");
      out.write("            \r\n");
      out.write("        if (ssVal < 10 ) document.tForm.ssVal.value=\"0\"+ssVal;\r\n");
      out.write("        else document.tForm.ssVal.value= ssVal;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    if( cFlag==\"N\" || (hhVal==0 && mmVal==0 && ssVal==0) ){\r\n");
      out.write("        hhVal = 0;\r\n");
      out.write("        mmVal = 0;\r\n");
      out.write("        ssVal = 0;\r\n");
      out.write("        document.tForm.hhVal.value= \"00\";\r\n");
      out.write("        document.tForm.mmVal.value= \"00\";\r\n");
      out.write("        document.tForm.ssVal.value= \"00\";\r\n");
      out.write("        stopTime ();\r\n");
      out.write("    }else{\r\n");
      out.write("        setTimeout(\"setTimeOn()\", 1000);//최대 1초 \r\n");
      out.write("    }        \r\n");
      out.write("} //setTimeOn()\r\n");
      out.write("function stopTime (){\r\n");
      out.write("    cFlag = \"N\";\r\n");
      out.write("    alert(\"완료\");\r\n");
      out.write("}\r\n");
      out.write("//카운트 다운 스크립트 종료\r\n");
      out.write("//--> \r\n");
      out.write("</script> \r\n");
      out.write("</head> \r\n");
      out.write("<body onLoad=\"clock()\"> \r\n");
      out.write("   <form name=\"time\"> \r\n");
      out.write("       현재 시간 : <input name=\"clock\" size=\"12\" value=\"\" style=\"border:0\"> \r\n");
      out.write("   </form> \r\n");
      out.write("   <form name=\"tForm\"> \r\n");
      out.write("       카운트할 시간(분 단위) 입력:<input name=\"minVal\" size=\"4\" maxlength=\"3\" value=\"\" >  \r\n");
      out.write("       <input type=\"button\"   value=\"카운트시작\" onClick=\"javascript:setMinute()\" /> \r\n");
      out.write("       <input name=\"hhVal\" size=\"4\" value=\"00\" style=\"border:0\" readonly>:\r\n");
      out.write("       <input name=\"mmVal\" size=\"4\" value=\"00\" style=\"border:0\" readonly>:\r\n");
      out.write("       <input name=\"ssVal\" size=\"4\" value=\"00\" style=\"border:0\" readonly >   \r\n");
      out.write("   </form> \r\n");
      out.write("   \r\n");
      out.write("   <form name=\"sForm\"> \r\n");
      out.write("        카운종료 <input type=\"button\"  value=\"카운트 종료\"  onClick=\"javascript:stopTime()\"> \r\n");
      out.write("    </form>\r\n");
      out.write("</body> \r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
