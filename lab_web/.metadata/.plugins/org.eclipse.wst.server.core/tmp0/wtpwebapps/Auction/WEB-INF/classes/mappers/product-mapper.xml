<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="edu.spring.ProductMapper">
  
 
  	<!-- 
  	resultType: select를 했을 때 레코드 하나의 타입
  	원래는 패키지 이름을 포함한 전체 경로의 클래스 이름을 사용해야함
  	mybatis-config.xml에서 typeAliases 속성에서 package를 정의했기 떄문에 클래스 이름만 써도 됨
  	
  	${test_board}: mybatis-config.xml 파일에서 "test-board" 프로퍼티에 저장된 값(value)를 읽어옴 -->
  	
  	<!-- 상품리스트에서 상품 선택시 -->
  	<select id="select_by_code" resultType="ProductVO">
  	select * from ${product} where ${code}=#{code}</select>  
  
  	
  	<!-- 상품등록. registerProduct -->
  	<insert id="insert">
  	insert into ${product}(${category},${name},${start_price}, ${closed_time}, ${quantity}, ${seller}, ${immediate_price}, ${detail}, ${img}) 
  	values(#{category},#{name},#{start_price}, #{closed_time}, #{quantity}, #{seller}, #{immediate_price}, #{detail}, #{img})</insert>
  	<!-- 상품등록 후 product_code 가져올 select문(이걸로 사진 폴더명 만들려고) -->
  	<select id="select_product_code" resultType="Integer">
  	select ${code} from ${product} where ${process}='bidding' and ${seller}=#{seller} and ${name}=#{name}</select>

  	
  	<!-- 상품 삭제 -->
  	<delete id="delete">delete from ${product} where ${code}=#{code}</delete>
  	
  	<!-- 제목으로 검색 -->
  	<select id="select_by_name" resultType="ProductVO">
  		select * from ${product} where ${name} like #{name} 
  		and ${process}='bidding'</select>
  		
  	<!-- 카테고리로 검색 //최신순 -->
  	<select id="select_by_category" resultType="ProductVO"> 
  	select * from ${product} where ${category} =#{category} 
  	and ${process}='bidding'
  	order by ${code} desc</select>
  		
  	<!-- 제목&카테고리로 검색 -->
  	<select id="select_by_name_and_category" resultType="ProductVO">
  		select * from ${product} where ${category}=#{category} and ${name} like #{name} 
  		and ${process}='bidding'</select>
  	
  	<!-- 판매자의 다른 상품 정보들 불러오기 -->
  	<select id="select_by_seller" resultType="ProductVO">
  		select * from ${product} where ${seller}=#{seller}
  	</select>




  	<!-- <select id="total_count" resultType="Integer">select count(*) total_cnt from ${test_board}</select>
  	
  	<select id="paging" resultType="BoardVO">
  		select b.${bno}, b.${title}, b.${content}, b.${userid}, b.${regdate} 
     	from (select rownum rn, a.*  from(select * from ${test_board} order by ${bno} desc) a )  b
       	where rn between #{start} and #{end}
       </select> -->
       
       
       <!-- bidding list 불러오기 -->
       <select id="select_biddinglist" resultType="BiddingVO">
       select * from ${bidding} where ${product_code}=#{product_code} order by ${price} desc
       </select>
       
<!--        	<property name="bidding" value="auction_bidding"/>
  		<property name="product_code" value="product_code"/>
  		<property name="user_id" value="user_id"/>
		<property name="regdate" value="regdate"/>
		<property name="price" value="price"/>
		<property name="max" value="max"/> Max여부 Y or N  -->
		
		
       <!-- bidding하기! --> <!-- 4개의 쿼리 필요. -->
       <update id="update_bidding_max">update ${bidding} set ${max}='N' where ${product_code}=#{product_code}</update>
       <insert id="insert_bidding" >
       insert into ${bidding}(${product_code}, ${user_id}, ${price}, ${max},${regdate}) 
       values (#{product_code}, #{user_id}, #{price}, 'Y', sysdate)</insert>
       <update id="update_bidders_cnt">update ${product} set ${bidders}=${bidders} + #{amount} where ${code} = #{code}</update>
        <!-- 경매가 올렸을때 -->
  		<update id="update_price">update ${product} set ${contract_price}=#{contract_price} where ${code}=#{code}</update>
       
       
       <!-- max price값 가져오기(for 비교) //이럴필요없었음 그냥 product객체에서 가져오면됨-->
       <!-- <select id="select_bidding_max_price" resultType="Integer">숫자로 오겠지?
       select ${price} from ${bidding} where ${product_code}=#{product_code} and ${max}='Y'
       </select> -->
       <select id="select_contract_price" resultType="Integer">
       select ${contract_price} from ${product} where ${code}=#{product_code}
       </select>
       
        <select id="select_start_price" resultType="Integer">
       select ${start_price} from ${product} where ${code}=#{product_code}
       </select>
       
       
       
       <!-- 나의 입찰 중 목록 
       select product_code from bidding where ${user_id}=#{user_id}
       select * from product where product_code=#{product_code}-->
       
       <!-- 장바구니(낙찰 받은 목록) -->
       
       <!--  -->
       
  </mapper>