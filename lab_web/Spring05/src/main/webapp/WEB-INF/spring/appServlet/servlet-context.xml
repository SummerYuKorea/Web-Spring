<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Spring05 번 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 모든것을 다 스캔하는 것이 아니라, 몇 가지(dao, service)를 제외하겠다. 2017.05.15 추가
	bean Graph를 확인하면, 등록된 bean을 확인 할 수 있다. -->
	<context:component-scan base-package="edu.spring.ex05" >
		<context:exclude-filter type="annotation"
					expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" 
					expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	
	<!-- 문자열 리소스를 bean으로 추가 !
		String uploadPath = new String("..."); 와 똑같은 역할을 하는 bean을 호출한다.
		우리가 업로드 하는 파일 전부 다 지정한 경로에 가도록 설정하겠다. 이제 컨트롤러 클래스를 만들자. -->
	<beans:bean id="uploadPath" 
							class="java.lang.String">
		<beans:constructor-arg value="C:\Users\Summer\java_workspace\FileUploadTest"/>
	</beans:bean>
	
	
	<!-- DisapatcherServlet이 MultipartResolver를 사용 : 
	MultipartResolver : form 양식에서 multipart/form-data 타입을 처리하기 위한 클래스 -->
	<beans:bean id="multipartResolver" 
							class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 최대 용량을 설정하는 속성을 줄 수 있다. 1024 x 1024 x 10 = 10MB -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
</beans:beans>




















